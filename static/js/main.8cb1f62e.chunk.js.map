{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","goodsFromServer","App","useState","Default","sortBy","setSortBy","isReversed","setIsReversed","visibleGoods","goods","preparedGoods","sort","good1","good2","Alphabet","localeCompare","Length","length","reverse","getPreparedGoods","isSortedAndReversed","className","type","cn","onClick","currentReversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAqBKA,E,0EAhBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAMGD,K,oBAAAA,E,gBAAAA,E,YAAAA,M,KAoCE,IAAME,EAAgB,WAC3B,MAA4BC,mBAAiBH,EAAOI,SAApD,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EA7BR,SAA0BC,EAA1B,GAA2E,IAA9BL,EAA6B,EAA7BA,OAAQE,EAAqB,EAArBA,WAC7CI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKL,EAAOe,SACV,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAAOiB,OACV,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXX,GACFI,EAAcQ,UAGTR,EAOcS,CACnBnB,EACA,CAAEI,SAAQE,eAYNc,EAAsBhB,GAAUE,EAEtC,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYnB,IAAWL,EAAOe,WAEhCU,QAAS,kBAAMnB,EAAUN,EAAOe,WALlC,iCAUA,wBACEQ,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYnB,IAAWL,EAAOiB,SAEhCQ,QAAS,kBAAMnB,EAAUN,EAAOiB,SALlC,4BAUA,wBACEM,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAajB,IAEfkB,QAvCiB,kBACvBjB,GAAc,SAAAkB,GAAe,OAAKA,MAiC9B,qBAUEL,GAEE,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA7CS,WACnBnB,EAAUN,EAAOI,SACjBI,GAAc,IAwCN,sBAWN,6BACE,6BACGC,EAAakB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,cC7HnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8cb1f62e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\n// const SORT_BY_ALPHABET = 'alphabet';\n// const SORT_BY_LENGTH = 'length';\n\nenum SortBy {\n  Alphabet = 'alphabet',\n  Length = 'length',\n  Default = '',\n}\n\ninterface Goods {\n  sortBy: SortBy | null;\n  isReversed: boolean;\n}\n\nfunction getPreparedGoods(goods: string[], { sortBy, isReversed }: Goods) {\n  const preparedGoods = [...goods];\n\n  if (sortBy) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case SortBy.Alphabet:\n          return good1.localeCompare(good2);\n\n        case SortBy.Length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState<SortBy>(SortBy.Default);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    { sortBy, isReversed },\n  );\n\n  const changeIsReversed = () => (\n    setIsReversed(currentReversed => !currentReversed)\n  );\n\n  const resetSorting = () => {\n    setSortBy(SortBy.Default);\n    setIsReversed(false);\n  };\n\n  const isSortedAndReversed = sortBy || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortBy !== SortBy.Alphabet,\n          })}\n          onClick={() => setSortBy(SortBy.Alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortBy !== SortBy.Length,\n          })}\n          onClick={() => setSortBy(SortBy.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={changeIsReversed}\n        >\n          Reverse\n        </button>\n\n        {(isSortedAndReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={resetSorting}\n            >\n              Reset\n            </button>\n          )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}